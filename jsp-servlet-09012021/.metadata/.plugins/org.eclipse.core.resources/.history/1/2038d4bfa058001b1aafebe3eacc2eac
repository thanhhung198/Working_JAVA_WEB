package com.laptrinhjavaweb.repository.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang.StringUtils;

import com.laptrinhjavaweb.dto.BuildingDTO;
import com.laptrinhjavaweb.entity.BuildingEntity;
import com.laptrinhjavaweb.paging.Pageable;
import com.laptrinhjavaweb.repository.IBuildingRepository;

public class BuildingRepository extends SimpleJpaRepository<BuildingEntity> implements IBuildingRepository {
	
	@Override
	public List<BuildingEntity> findAll(Map<String, Object> params, int offset, int limit) {
		String name = (String) params.get("name");
		String district = (String) params.get("district");
		Integer buildingArea = (int) params.get("buildingArea");
		Integer numberOfBasement = (int) params.get("numberOfBasement");
		
		StringBuilder where = new StringBuilder();
		if(StringUtils.isNotBlank(name)) {
			where.append("AND A.name LIKE '%"+name+"%' ");
		}
		if(StringUtils.isNotBlank(district)) {
			where.append("AND A.district LIKE '%"+district+"%' ");
		}
		if(buildingArea != null) {
			where.append("AND A.buildingArea LIKE '%"+buildingArea+"%' ");
		}
		if(numberOfBasement != null) {
			where.append("AND A.numberOfBasement LIKE '%"+numberOfBasement+"%' ");
		}
		where = new StringBuilder("AND A.name LIKE '%"+name+"%' AND A.district LIKE '%"+district+"%'" );
		where.append(" AND A.buildingarea = "+buildingArea+" AND A.numberofbasement = "+numberOfBasement+"");
		return this.findAll(offset, limit, where.toString());
	}

	/*
	 * @Override public List<BuildingDTO> findAll() { List<BuildingDTO> results =
	 * new ArrayList<>(); String sql = "Select * from building "; Connection
	 * connection = null; PreparedStatement statement = null; ResultSet resultSet =
	 * null; try { connection = EntityManagerFactory.getConnection(); statement =
	 * connection.prepareStatement(sql); resultSet = statement.executeQuery();
	 * while(resultSet.next()) { BuildingDTO buildingDTO = new BuildingDTO();
	 * buildingDTO.setName(resultSet.getString("name"));//get theo ten cot trong DB
	 * buildingDTO.setStreet(resultSet.getString("street"));
	 * results.add(buildingDTO); } return results; } catch (SQLException e) { return
	 * null; } finally { try { if(connection != null) { connection.close(); }
	 * if(statement != null) { connection.close(); } if(resultSet != null) {
	 * connection.close(); } } catch (SQLException e) { return null; }
	 * 
	 * }
	 * 
	 * }
	 */

}
